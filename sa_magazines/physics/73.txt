編結量子計算 : 量子位元的特殊性質，令科學家對量子計算興致勃勃。如果能再結合數學上拓撲的概念，或可創造出新的量子計算方式。
鼓吹量子電腦的人向我們保證，這種電腦可以執行一般電腦無能為力的計算。在這一類只能依賴量子電腦的計算任務當中，有些具有很重要的應用價值。舉例而言，只要有電腦能夠在合理的時間之內，將很大的數字分解成其組成因數，就可以破解某些廣為使用的密碼系統。幾乎所有用於保護高度敏感資料的密碼系統，都會被某個量子算則所破解。量子電腦為什麼有更強的計算能力？答案在於量子電腦所處理的資訊是以量子位元代表，而非普通位元。一個普通的古典位元只能是0或1；標準的微晶片架構很嚴謹地在執行這種古典二分法。但是相對而言，一個量子位元則可以處於一種所謂的「疊加狀態」，這是一種可以讓0的一部份與1的一部份共存的狀態。我們可以把可能的量子位元狀態看成是球面上的一點。北極代表古典狀態1，南極是0，所有介於兩者之間的點則代表0或1的所有可能疊加狀態（見2003年1月號〈奇妙的量子棋步〉）。量子電腦之所以具有特殊能力，原因就在於量子位元能夠自由地在整個球面上漫遊。可惜的是，量子電腦似乎非常難製造。一般而言，我們利用局限於某個地方的粒子（例如單獨的原子離子或電子）的某些量子性質，來代表量子位元。但是它們的疊加狀態極為脆弱，只要它們和周遭環境（包括所有組成電腦的材料）有一點點不期而來的交互作用，那麼疊加狀態就會被破壞。如果量子位元不能和環境仔細地隔絕起來，這種干擾就會造成計算上的錯誤。因此在設計量子電腦時，絕大多數將焦點置於減少量子位元與環境的交互作用。研究人員知道，一旦錯誤率可以降低到每一萬步計算約只會出現一次，修正錯誤的步驟就可以用於補償個別量子位元的衰落。可以運作的量子電腦需要含有大量的量子位元，而每個量子位元與環境的隔離必須好到讓錯誤率如前述的那樣低，建造這樣的量子電腦是極困難的工作，物理學家距離成功還很遙遠。有一些研究者試圖走另一條很不一樣的路來建造量子電腦。在這個新辦法裡，脆弱的量子狀態所依賴的是物理系統的拓撲性質。拓撲是一門數學，它研究的對象是物體在平滑變形（例如伸長、擠壓、彎曲、但不得切斷或連接起來）之下仍會保持不變的性質。拓撲涵蓋的項目之一是扭結（knot）理論。微小的擾動並不會改變物體的拓撲性質。例如，一條弦綁成一個扭結的封閉迴圈，和沒有扭結的封閉迴圈相比，在拓撲上兩者是不同的（見65頁〈拓撲與扭結〉）。將沒有扭結的封閉迴圈變成一個封閉迴圈加上扭結的唯一辦法是切斷弦，綁出扭結，再將弦的兩端封起來。同樣的，要把一個拓撲量子位元轉變成另一種狀態，也非得利用類似的激烈方式不可，來自環境的一點點推擠是改變不了拓撲量子位元的。乍看之下，拓撲量子電腦根本不像是個電腦。它用來計算的是結成絞辮的弦，而不是傳統意義上的實體弦。這種用於計算的弦是物理學家所稱的世界線，它所代表的是穿過時間與空間的粒子。（你可以這麼想像：這樣一條弦的長度代表粒子在時間軸上的運動，其厚度則代表粒子的實體大小。）此外，這種計算所牽涉到的粒子並非你最初可能想像的電子或質子。其實這種量子電腦所牽涉到的粒子是準粒子（quasiparticle），它是二維電子系統的激發態，它們的行為和高能物理中的粒子與反粒子很像。這些粒子還有個麻煩之處：它們是一種特別型態的準粒子，稱為任意子，具有建構量子電腦所需要的數學性質。執行一次這種量子計算的過程大約是這樣子的：首先，創造許多對任意子，將它們沿著一條線排列。（見66頁〈拓撲量子計算的原理〉）每一對任意子就如同一個粒子與其反粒子，是純粹由能量所創造出來的。其次，以明確的順序讓一對對相鄰的任意子彼此環繞。每一個任意子的世界線基本上就構成一條線，任意子這種對調的運動便製造出了一串這些世界線的絞辮。量子計算就藏在如此形成的特定絞辮裡。任意子的最終狀態存放了計算的結果，這狀態的性質取決於絞辮，而非任何偶然的電磁交互作用。同時絞辮是拓撲性的（把線搖動一下並不會改變絞辮），所以它在本質上就不受外界的影響。目前在微軟工作的基塔耶夫（AlexeiY.Kitaev）首先於1997年，提出以這種方式來利用任意子執行計算。目前也在微軟從事研究的傅利曼（MichaelH.Freedman）於1988年秋天在哈佛大學演講，主題就是利用量子拓撲進行計算的可能性。他在1998年發表了一篇研究論文，闡述了他的想法。傅利曼的想法奠基於一項數學發現：某些屬於「結不變量」的數學量，和二維曲面隨著時間而演變的量子物理有關。如果我們可以創造物理系統的某個狀況，同時對它做適當的測量，就可以約略自動計算出結不變量，不然我們就得透過傳統電腦執行冗長又不方便的計算。我們也可以利用類似的捷徑來執行同樣困難、但有實際應用價值的計算。雖然這一切聽起來只不過是和現實無關的理論玄想而已，但是最近對於分數量子霍爾效應的實驗，已經讓任意子的想法比較扎實一些，研究者已經設想出更多的實驗以便執行初步的拓撲量子計算。